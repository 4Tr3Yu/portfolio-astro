---
import Arrow from './icons/Arrow.astro';
import External from './icons/External.astro';
import Modal from './ui/Modal.astro';
import ModalNav from './ui/ModalNav.astro';
import { experienceData } from '../data/experience';

interface Props {
	title: string;
	company: string;
	body: {
		long: string;
		tasks: Array<string>;
	};
	href: string;
	imgSrc: string;
	iconSrc: string;
	dates: Array<string>;
	btn?: boolean;
	stack?: Array<string>;
}

const { href, title, body, imgSrc, iconSrc, company, dates, btn, stack} = Astro.props;
const lang = "es";
---

<article class="card relative flex justify-center items-center rounded-md overflow-hidden min- border border-red-500/25">
	<div class="content p-4 h-full w-full flex flex-col justify-end ">
		<header>
			<h3 class="text-lg font-semibold w-full text-amber-300 mb-0">{company}</h3>
			<h4 class="text-md font-bold w-full mb-0">{title}</h4>
			<time class="dates w-full mb-3 font-bold">
				{dates.map((date) => <span class="mr-2 text-xs text-amber-200">{date}</span>)}
			</time>
		</header>
		<div class="card-body ">
			<p class="text-sm sm:text-xs text-amber-200 line-clamp-3">{body.long}</p>
			<button data-modal={`modal-${company.toLowerCase().split(' ').join('-')}`} class="open-modal flex justify-start items-center text-xs font-bold">Conoce m√°s <Arrow>/</button>
		</div>
	</div>
	<div class="img-container absolute top-0 left-0 h-full w-full overflow-hidden -z-10">
		<img class="object-cover w-full"  src={imgSrc} alt={company} />
	</div>
</article>

<Modal id={`${company.toLowerCase().split(' ').join('-')}`} >
	<ModalNav slot="nav" data={experienceData[lang].data} id={`${company.toLowerCase().split(' ').join('-')}`}/>
	<div class="logo-container text-left max-w-[80%] max-h-24  mb-6">
		<img class="max-h-20" src={iconSrc} alt={`${company} logo`}>
	</div>
	<h3 class="text-2xl text-amber-400 font-extrabold mb-2 flex items-center">
		{company}
		<a href={href} target="_blank" class="text-xs ml-1">
			<External class="size-4" />
		</a>
	</h3>
	<p class="text-amber-200/90 line text-sm mb-6">{body.long}</p>
	<h4 class="text-lg font-medium mb-3">Stack</h4>
	<div class="w-full grid grid-cols-4 md:grid-cols-6 gap-4  mb-6">
		{stack && stack.map((tech) => {
			return (
				<figure class="flex flex-col min-h-12 mr-2 items-center">
					<img class="w-6 mb-2 flex-auto" loading="lazy" src={`./icons/${tech.toLowerCase()}.svg`} alt={tech} />
					<figcaption class="text-xs">{tech} </figcaption>
				</figure>
			)
		})}
	</div>
	<h4 class="text-lg font-medium mb-3">{lang === 'es' ? "Tareas destacadas" : "Highlights"}</h4>
	<ul class="text-sm mb-6 list-disc pl-5">
		{body.tasks && body.tasks.map((task) => <li class="mb-2">{task}</li>)}
	</ul>
</Modal>

<style lang="scss">
	.card {
		box-shadow: 0 10px 20px rgba(0, 0, 0, 0.3);
		height: 300px;
		transition: all ease-in-out 100ms;
		.content {
			background: rgba(0, 0, 0, 0.7);
			backdrop-filter: blur(4px);
			transition: all ease-in-out 800ms;


			@media (max-width: 680px) {
				background: rgba(0, 0, 0, 0.8);
				backdrop-filter: blur(10px);
			}

			header {
				position: absolute;
				inset: auto auto 16px 16px;
				transition: inset .3s .3s ease-out;
				@media (max-width: 680px) {
					inset: auto auto 110px 16px;
					transition: inset .3s ease-out;		
				}
			}

			.card-body {
				position: absolute;
				opacity: 0;
				transition: opacity .3s ease-out;
				inset: auto auto 16px 16px;
				@media (max-width: 680px) {
					opacity: 1;
    				transition: opacity .5s .1s ease-in;
				}
			}
			&:hover {
				background: rgba(0, 0, 0, 0.8);
				backdrop-filter: blur(10px);

				header {
					inset: auto auto 110px 16px;
					transition: inset .3s ease-out;				
				}
				 .card-body {
					opacity: 1;
    				transition: opacity .5s .1s ease-in;
				}
			}
		}


		&:hover {
			.logo-container {
				img {
					filter: grayscale(0);
				}
			}
		}
		
	}
	.img-container {
		&::after {
			content: '';
			position: absolute;
			top: 0;
			left: 0;
			width: 100%;
			height: 100%;
			background: linear-gradient(45deg, #751717,#000000);
			mix-blend-mode: overlay;
			pointer-events: none;
		}

		img {
			filter: sepia(1) hue-rotate(330deg) saturate(2);
			object-position: center;
			animation: zoomEffect 10s infinite alternate ease-in-out;
		}
	}

	@keyframes zoomEffect {
    0% {
        transform: scale(1);
		rotate: 0deg;
    }
    100% {
        transform: scale(1.2);
		rotate: 6deg;
    }
}
</style>